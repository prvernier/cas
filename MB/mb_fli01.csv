CAS ATTRIBUTES,,,,,,
rule_id,target_attribute,target_attribute_type,validation_rules,translation_rules,description,desc_uptodate_with_rules
1,CAS_ID,text,notEmpty(inventory_id);notNull(map_sheet_id);notNull(orig_stand_id);notNull(src_filename);notNull(ogc_fid),"padConcat({inventory_id, src_filename, map_sheet_id, orig_stand_id, ogc_fid}, {4,15,10,10,7}, {'x','x','x','0','0'}, '-', 'TRUE', 'TRUE')","The combination of ogc_fid, ogc_fidID, MAPSHEET and SRC_FILENAME is a unique identifier across all counties. All four are needed to create the unique id that traces back to the source polygon.",VRAI
2,INVENTORY_ID,text,notEmpty(inventory_id),copyText(inventory_id),Copies source value,VRAI
3,ORIG_STAND_ID,text,"notNull(orig_stand_id);isInt(orig_stand_id);isGreaterThan(orig_stand_id, 0)",copyText(orig_stand_id),Copies source value to ORIG_STAND_ID,VRAI
4,STAND_STRUCTURE,text,"notEmpty({species_1, species_2, species_3, species_4 ,species_5}, TRUE|NOT_APPLICABLE)",copyText('S'),"Only one LYR layer possible. If species info present, stand structure is S.",VRAI
5,NUM_OF_LAYERS,integer,true(),"mb_fli01_countOfNotNull({species_1, species_2, species_3, species_4, species_5}, landtype, 2, 'FALSE')",Counts number of layers based on the presence of a not null value for attributes representing each layer. Custom function decides if NFL layer is present based on rules in NFL table.,VRAI
6,MAP_SHEET_ID,text,notNull(map_sheet_id),copyText(map_sheet_id),Copies source value,VRAI
7,CASFRI_AREA,double precision,"geoIsValid(wkb_geometry, TRUE)",geoArea(wkb_geometry),Validates geometry then calculates area,VRAI
8,CASFRI_PERIMETER,double precision,"geoIsValid(wkb_geometry, TRUE)",geoPerimeter(wkb_geometry),Validates geometry then calculates perimeter,VRAI
9,SRC_INV_AREA,double precision,"notNull(src_inv_area);isNumeric(src_inv_area);isGreaterThan(src_inv_area, 0)",copyDouble(src_inv_area),Copies source value to SRC_INV_AREA,VRAI
10,STAND_PHOTO_YEAR,integer,false(),nothingInt(),Attribute does not occur,VRAI
,,,,,,
LYR ATTRIBUTES,,,,,,
rule_id,target_attribute,target_attribute_type,validation_rules,translation_rules,description,desc_uptodate_with_rules
0,ROW_TRANSLATION_RULE,NA,"notEmpty({species_1, species_2, species_3, species_4, species_5}, TRUE)",NA,"Translate only rows where sp1, sp2, sp3, sp4 or sp5 is not empty",VRAI
1,CAS_ID,text,notEmpty(inventory_id);notNull(map_sheet_id);notNull(orig_stand_id);notNull(src_filename);notNull(ogc_fid),"padConcat({inventory_id, src_filename, map_sheet_id, orig_stand_id, ogc_fid}, {4,15,10,10,7}, {'x','x','x','0','0'}, '-', 'TRUE', 'TRUE')",Concatenates five attributes to create CAS_ID,VRAI
2,SOIL_MOIST_REG,text,"notNull(soil_moist_reg);notEmpty(soil_moist_reg);matchList(soil_moist_reg,{'D','F','M','V','W'})","mapText(soil_moist_reg, {'D','F','M','V','W'}, {'DRY','MESIC','MOIST','MESIC','WET'})",Maps source value to SOIL_MOIST_REG using lists of values,VRAI
3,STRUCTURE_PER,integer,true(),copyInt(100),No horizontal structure so structure percent is 100,VRAI
4,LAYER,integer,true(),"mb_fli01_countOfNotNull({species_1, species_2, species_3, species_4, species_5}, landtype, layer, 'FALSE')",Counts number of layers based on the presence of a not null value for attributes representing each layer. Custom function decides if NFL layer is present based on rules in NFL table.,VRAI
5,LAYER_RANK,integer,false(),nothingInt(),Attribute does not occur,VRAI
6,CROWN_CLOSURE_UPPER,integer,"notNull(crown_closure_upper);notEmpty(crown_closure_upper|-8888);matchList(crown_closure_upper,{'0','1','2','3','4','5','6','7','8','9'}|-9997)","mapInt(crown_closure_upper, {'0','1','2','3','4','5','6','7','8','9'}, {10,20,30,40,50,60,70,80,90,100})",Maps source value to CROWN_CLOSURE_UPPER using lists of values.,VRAI
7,CROWN_CLOSURE_LOWER,integer,"notNull(crown_closure_upper);notEmpty(crown_closure_upper|-8888);matchList(crown_closure_upper,{'0','1','2','3','4','5','6','7','8','9'}|-9997)","mapInt(crown_closure_upper, {'0','1','2','3','4','5','6','7','8','9'}, {1,11,21,31,41,51,61,71,81,91})",Maps source value to CROWN_CLOSURE_UPPER using lists of values.,VRAI
8,HEIGHT_UPPER,double precision,"notNull(height_upper);isNumeric(height_upper);isBetween(height_upper,'0.1',100)",copyDouble(height_upper),Copies source value to HEIGHT_UPPER,VRAI
9,HEIGHT_LOWER,double precision,"notNull(height_lower);isNumeric(height_lower);isBetween(height_lower,'0.1',100)",copyDouble(height_lower),Copies source value to HEIGHT_LOWER,VRAI
10,PRODUCTIVE_FOR,text,false(),nothingText(),Correct translation has not been determined.,VRAI
11,SPECIES_1,text,"notNull(species_1);notEmpty(species_1);matchTable(species_1, 'translation', 'species_code_mapping', 'mb_species_codes', 'TRUE')","lookupText(species_1, 'translation', 'species_code_mapping', 'mb_species_codes', 'casfri_species_codes', 'TRUE')",Maps source value to SPECIES_1 using lookup table,VRAI
12,SPECIES_PER_1,integer,"notNull(species_per_1);isInt(species_per_1|-9997);isBetween(species_per_1, 1, 10|-9997)","mapInt(species_per_1, {1,2,3,4,5,6,7,8,9,10}, {10,20,30,40,50,60,70,80,90,100})",Maps source value to SPECIES_PER_1 by multiplying by 10,VRAI
13,SPECIES_2,text,"notNull(species_2);notEmpty(species_2);matchTable(species_2, 'translation', 'species_code_mapping', 'mb_species_codes', 'TRUE')","lookupText(species_2, 'translation', 'species_code_mapping', 'mb_species_codes', 'casfri_species_codes', 'TRUE')",Maps source value to SPECIES_2 using lookup table. Uses a second column in the lookup table to allow the layer 2 source values to be translated to different target values for species 1 and species 2.,VRAI
14,SPECIES_PER_2,integer,"notNull(species_per_2);isInt(species_per_2|-9997);isBetween(species_per_2, 1, 10|-9997)","mapInt(species_per_2, {1,2,3,4,5,6,7,8,9,10}, {10,20,30,40,50,60,70,80,90,100})",Maps source value to SPECIES_PER_2 by multiplying by 10,VRAI
15,SPECIES_3,text,"notNull(species_3);notEmpty(species_3);matchTable(species_3, 'translation', 'species_code_mapping', 'mb_species_codes', 'TRUE')","lookupText(species_3, 'translation', 'species_code_mapping', 'mb_species_codes', 'casfri_species_codes', 'TRUE')",Maps source value to SPECIES_3 using lookup table,VRAI
16,SPECIES_PER_3,integer,"notNull(species_per_3);isInt(species_per_3|-9997);isBetween(species_per_3, 1, 10|-9997)","mapInt(species_per_3, {1,2,3,4,5,6,7,8,9,10}, {10,20,30,40,50,60,70,80,90,100})",Maps source value to SPECIES_PER_3 by multiplying by 10. ,VRAI
17,SPECIES_4,text,"notNull(species_4);notEmpty(species_4);matchTable(species_4, 'translation', 'species_code_mapping', 'mb_species_codes', 'TRUE')","lookupText(species_4, 'translation', 'species_code_mapping', 'mb_species_codes', 'casfri_species_codes', 'TRUE')",Maps source value to SPECIES_4 using lookup table,VRAI
18,SPECIES_PER_4,integer,"notNull(species_per_4);isInt(species_per_4|-9997);isBetween(species_per_4, 1, 10|-9997)","mapInt(species_per_4, {1,2,3,4,5,6,7,8,9,10}, {10,20,30,40,50,60,70,80,90,100})",Maps source value to SPECIES_PER_4 by multiplying by 10. ,VRAI
19,SPECIES_5,text,"notNull(species_5);notEmpty(species_5);matchTable(species_5, 'translation', 'species_code_mapping', 'mb_species_codes', 'TRUE')","lookupText(species_5, 'translation', 'species_code_mapping', 'mb_species_codes', 'casfri_species_codes', 'TRUE')",Maps source value to SPECIES_5 using lookup table,VRAI
20,SPECIES_PER_5,integer,"notNull(species_per_5);isInt(species_per_5|-9997);isBetween(species_per_5, 1, 10|-9997)","mapInt(species_per_5, {1,2,3,4,5,6,7,8,9,10}, {10,20,30,40,50,60,70,80,90,100})",Maps source value to SPECIES_PER_5 by multiplying by 10. ,VRAI
21,SPECIES_6,text,"notNull(species_6);notEmpty(species_6);matchTable(species_6, 'translation', 'species_code_mapping', 'mb_species_codes', 'TRUE')","lookupText(species_6, 'translation', 'species_code_mapping', 'mb_species_codes', 'casfri_species_codes', 'TRUE')",Maps source value to SPECIES_6 using lookup table,VRAI
22,SPECIES_PER_6,integer,"notNull(species_per_6);isInt(species_per_6|-9997);isBetween(species_per_6, 1, 10|-9997)","mapInt(species_per_6, {1,2,3,4,5,6,7,8,9,10}, {10,20,30,40,50,60,70,80,90,100})",Maps source value to SPECIES_PER_6 by multiplying by 10. ,VRAI
23,SPECIES_7,text,false(),nothingText(),Attribute does not occur,VRAI
24,SPECIES_PER_7,integer,false(),nothingInt(),Attribute does not occur,VRAI
25,SPECIES_8,text,false(),nothingText(),Attribute does not occur,VRAI
26,SPECIES_PER_8,integer,false(),nothingInt(),Attribute does not occur,VRAI
27,SPECIES_9,text,false(),nothingText(),Attribute does not occur,VRAI
28,SPECIES_PER_9,integer,false(),nothingInt(),Attribute does not occur,VRAI
29,SPECIES_10,text,false(),nothingText(),Attribute does not occur,VRAI
30,SPECIES_PER_10,integer,false(),nothingInt(),Attribute does not occur,VRAI
31,ORIGIN_UPPER,integer,"notNull(origin_upper);isInt(origin_upper);isBetween(origin_upper,1000,2020)",copyInt(origin_upper),Copies (origin) to ORIGIN_UPPER,VRAI
32,ORIGIN_LOWER,integer,"notNull(origin_lower);isInt(origin_lower);isBetween(origin_lower,1000,2020)",copyInt(origin_lower),Copies (origin) to ORIGIN_LOWER,VRAI
33,SITE_CLASS,text,false(),nothingText(),Attribute does not occur,VRAI
34,SITE_INDEX,double precision,false(),nothingDouble(),Attribute does not occur,VRAI
,,,,,,
NFL ATTRIBUTES,,,,,,
rule_id,target_attribute,target_attribute_type,validation_rules,translation_rules,description,desc_uptodate_with_rules
0,ROW_TRANSLATION_RULE,NA,"matchList(nnf_anth,{'NMB','NMC','NMF','NMR','NMS','NMM','NMG','NWL','NWR','NWF','CIP','CIW','CIU','ASC','ASR','ASP','ASN','AIH','AIR','AIG','AII','AIW','AIA','AIF','AIU','SO','AL','SC','CC','HG','CS','HF','AS','HU','VI','BR','RA','CL','DL','AU'})",NA,Translate only rows where landtype has an nfl value, TRUE
1,CAS_ID,text,notEmpty(inventory_id);notNull(map_sheet_id);notNull(orig_stand_id);notNull(src_filename);notNull(ogc_fid),"padConcat({inventory_id, src_filename, map_sheet_id, orig_stand_id, ogc_fid}, {4,15,10,10,7}, {'x','x','x','0','0'}, '-', 'TRUE', 'TRUE')",Concatenates five attributes to create CAS_ID,VRAI
2,SOIL_MOIST_REG,text,false(|UNKNOWN_VALUE),nothingText(),Attribute does not occur,VRAI
3,STRUCTURE_PER,integer,true(),copyInt(100),No horizontal structure so structure percent is 100,VRAI
4,LAYER,integer,true(),"mb_fli01_countOfNotNull({species_1, species_2, species_3, species_4, species_5}, landtype, layer, 'FALSE')",Counts number of layers based on the presence of a not null value for attributes representing each layer. Custom function decides if NFL layer is present based on rules in NFL table.,VRAI
5,LAYER_RANK,integer,false(|-8887),nothingInt(),Attribute does not occur,VRAI
6,CROWN_CLOSURE_UPPER,integer,false(),nothingInt(),Attribute does not occur,VRAI
7,CROWN_CLOSURE_LOWER,integer,false(),nothingInt(),Attribute does not occur,VRAI
8,HEIGHT_UPPER,double precision,false(),nothingDouble(),Attribute does not occur,VRAI
9,HEIGHT_LOWER,double precision,false(),nothingDouble(),Attribute does not occur,VRAI
10,NAT_NON_VEG,text,"notNull(nnf_anth);matchList(nnf_anth,{'NMB','NMC','NMF','NMR','NMS','NMM','NMG','NWL','NWR','NWF'}|NOT_APPLICABLE)","mapText(landtype, {'NMB','NMC','NMF','NMR','NMS','NMM','NMG','NWL','NWR','NWF'}, {'EXPOSED_LAND','EXPOSED_LAND','ROCK_RUBBLE','ROCK_RUBBLE','SAND','EXPOSED_LAND','WATER_SEDIMENT','LAKE','RIVER','FLOOD'})",Maps source value to NAT_NON_VEG using list of values.,VRAI
11,NON_FOR_ANTH,text,"notNull(nnf_anth);matchList(nnf_anth,{'CIP','CIW','CIU','ASC','ASR','ASP','ASN','AIH','AIR','AIG','AII','AIW','AIA','AIF','AIU'}|NOT_APPLICABLE)","mapText(landtype, {'CIP','CIW','CIU','ASC','ASR','ASP','ASN','AIH','AIR','AIG','AII','AIW','AIA','AIF','AIU'}, {'FACILITY_INFRASTRUCTURE','FACILITY_INFRASTRUCTURE','OTHER','SETTLEMENT','SETTLEMENT','FACILITY_INFRASTRUCTURE','FACILITY_INFRASTRUCTURE','FACILITY_INFRASTRUCTURE','FACILITY_INFRASTRUCTURE','INDUSTRIAL','INDUSTRIAL','LAGOON','FACILITY_INFRASTRUCTURE','SETTLEMENT','OTHER'})",Maps source value to NON_FOR_ANTH using list of values.,VRAI
12,NON_FOR_VEG,text,"notNull(nnf_anth);matchList(nnf_anth,{'SO','AL','SC','CC','HG','CS','HF','AS','HU','VI','BR','RA','CL','DL','AU'}|NOT_APPLICABLE)","mapText(landtype,{'SO','AL','SC','CC','HG','CS','HF','AS','HU','VI','BR','RA','CL','DL','AU'}, {'OPEN_SHRUB','TALL_SHRUB','TALL_SHRUB','TALL_SHRUB','GRAMINOIDS','TALL_SHRUB','FORBS','TALL_SHRUB','FORBS','TALL_SHRUB','BRYOD','LOW_SHRUB','BRYOD','LOW_SHRUB','LOW_SHRUB'})",Maps source value to NON_FOR_VEG using list of values.,VRAI
,,,,,,
DST ATTRIBUTES,,,,,,
rule_id,target_attribute,target_attribute_type,validation_rules,translation_rules,description,desc_uptodate_with_rules
0,ROW_TRANSLATION_RULE,NA,notEmpty(dist_type_1),NA,Translate only rows where dist_type1 is not empty, TRUE
1,CAS_ID,text,notEmpty(inventory_id);notNull(map_sheet_id);notNull(orig_stand_id);notNull(src_filename);notNull(ogc_fid),"padConcat({inventory_id, src_filename, map_sheet_id, orig_stand_id, ogc_fid}, {4,15,10,10,7}, {'x','x','x','0','0'}, '-', 'TRUE', 'TRUE')",Concatenates five attributes to create CAS_ID,VRAI
2,DIST_TYPE_1,text,"notNull(dist_type_1);notEmpty(dist_type_1);matchList(dist_type_1,{'CC','BU','WF','CL','DI','DM','IK','IB','UK','BF','SF','BF','WE','DT','BT'})","mapText(dist_type_1, {'CC','BU','WF','CL','DI','DM','IK','IB','UK','BF','SF','BF','WE','DT','BT'}, {'CUT','BURN','WINDFALL','OTHER','DISEASE','DISEASE','INSECT','INSECT','OTHER','FLOOD','FLOOD','FLOOD','WEATHER','DEAD_UNKNOWN','OTHER'})",Maps source value to DIST_TYPE_1 using lists of values.,VRAI
3,DIST_YEAR_1,integer,"notNull(dist_year_1);isInt(dist_year_1);isBetween(dist_year_1,1,2020)",copyInt(dist_year_1),Copies mod1_yr to DIST_YEAR_1.,VRAI
4,DIST_EXT_UPPER_1,integer,"notNull(dist_ext_upper_1);notEmpty(dist_ext_upper_1|-8888);isInt(dist_ext_upper_1);isBetween(dist_ext_upper_1,1,5)","mapInt(dist_ext_upper_1, {1,2,3,4,5}, {25,50,75,95,100})","Maps source attribute to upper extent. Validation catches Nulls, them empty strings which should be treated as Nulls for source integers. Then checks the source value is an integer between 1 and 5.",VRAI
5,DIST_EXT_LOWER_1,integer,"notNull(dist_ext_lower_1);notEmpty(dist_ext_lower_1|-8888);isInt(dist_ext_lower_1);isBetween(dist_ext_lower_1,1,5)","mapInt(dist_ext_lower_1, {1,2,3,4,5}, {1,26,51,76,96})","Maps source attribute to upper extent. Validation catches Nulls, them empty strings which should be treated as Nulls for source integers. Then checks the source value is an integer between 1 and 5.",VRAI
6,DIST_TYPE_2,text,"notNull(dist_type_2);notEmpty(dist_type_2);matchList(dist_type_2,{'CC','BU','WF','CL','DI','DM','IK','IB','UK','BF','SF','BF','WE','DT','BT'})","mapText(dist_type_2, {'CC','BU','WF','CL','DI','DM','IK','IB','UK','BF','SF','BF','WE','DT','BT'}, {'CUT','BURN','WINDFALL','OTHER','DISEASE','DISEASE','INSECT','INSECT','OTHER','FLOOD','FLOOD','FLOOD','WEATHER','DEAD_UNKNOWN','OTHER'})",Maps source value to DIST_TYPE_2 using lists of values,VRAI
7,DIST_YEAR_2,integer,"notNull(dist_year_2);isInt(dist_year_2);isBetween(dist_year_2,1,2020)",copyInt(dist_year_2),Copies mod1_yr to DIST_YEAR_2.,VRAI
8,DIST_EXT_UPPER_2,integer,"notNull(dist_ext_upper_2);notEmpty(dist_ext_upper_2|-8888);isInt(dist_ext_upper_2);isBetween(dist_ext_upper_2,1,5)","mapInt(dist_ext_upper_2, {1,2,3,4,5}, {25,50,75,95,100})",Maps source attribute to upper extent,VRAI
9,DIST_EXT_LOWER_2,integer,"notNull(dist_ext_lower_2);notEmpty(dist_ext_lower_2|-8888);isInt(dist_ext_lower_2);isBetween(dist_ext_lower_2,1,5)","mapInt(dist_ext_lower_2, {1,2,3,4,5}, {1,26,51,76,96})",Maps source attribute to lower extent,VRAI
10,DIST_TYPE_3,text,false(),nothingText(),Attribute does not occur,VRAI
11,DIST_YEAR_3,integer,false(),nothingInt(),Attribute does not occur,VRAI
12,DIST_EXT_UPPER_3,integer,false(),nothingInt(),Attribute does not occur,VRAI
13,DIST_EXT_LOWER_3,integer,false(),nothingInt(),Attribute does not occur,VRAI
14,LAYER,integer,true(),nothingInt(|-8886),Disturbance layer is unknown,VRAI
,,,,,,
ECO ATTRIBUTES,,,,,,
rule_id,target_attribute,target_attribute_type,validation_rules,translation_rules,description,desc_uptodate_with_rules
0,ROW_TRANSLATION_RULE,NA,false(),NA,No row to translate, TRUE
1,CAS_ID,text,notEmpty(inventory_id);notNull(map_sheet_id);notNull(orig_stand_id);notNull(src_filename);notNull(ogc_fid),"padConcat({inventory_id, src_filename, map_sheet_id, orig_stand_id, ogc_fid}, {4,15,10,10,7}, {'x','x','x','0','0'}, '-', 'TRUE', 'TRUE')",Concatenates five attributes to create CAS_ID,VRAI
2,WETLAND_TYPE,text,false(),nothingText(),Attribute does not occur,VRAI
3,WET_VEG_COVER,text,false(),nothingText(),Attribute does not occur,VRAI
4,WET_LANDFORM_MOD,text,false(),nothingText(),Attribute does not occur,VRAI
5,WET_LOCAL_MOD,text,false(),nothingText(),Attribute does not occur,VRAI
6,ECO_SITE,text,false(),nothingText(),Attribute does not occur,VRAI
,,,,,,
GEO ATTRIBUTES,,,,,,
rule_id,target_attribute,target_attribute_type,validation_rules,translation_rules,description,desc_uptodate_with_rules
1,CAS_ID,text,notEmpty(inventory_id);notNull(map_sheet_id);notNull(orig_stand_id);notNull(src_filename);notNull(ogc_fid),"padConcat({inventory_id, src_filename, map_sheet_id, orig_stand_id, ogc_fid}, {4,15,10,10,7}, {'x','x','x','0','0'}, '-', 'TRUE', 'TRUE')",Concatenates five attributes to create CAS_ID,VRAI
2,GEOMETRY,geometry,"geoIsValid(wkb_geometry, TRUE|POLYGON EMPTY)",geoMakeValidMultiPolygon(wkb_geometry),Returns the geometry and validates if necessary. If valid geometry cannot be made error code is returned.,VRAI
